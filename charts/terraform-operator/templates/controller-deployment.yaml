{{- if .Values.controller.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: terraform-operator
  labels:
    app: {{ .Chart.Name }}
    chart: {{ template "_chart.label" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: terraform-operator
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
      initContainers:
      {{- if .Values.webhook.enabled }}
      - name: gencert
        image: "isaaguilar/terraform-operator-gencert:v1.0.0"
        imagePullPolicy: IfNotPresent
        env:
        - name: SERVICE
          value: {{ .Release.Name }}-webhook
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: SECRET
          value: {{ .Release.Name }}-selfsigned
      {{- end}}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
        imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
        command:
        - terraform-operator
        args:
        {{- range .Values.controller.args }}
        - {{ . }}
        {{- end }}
        {{- if not .Values.webhook.enabled }}
        - --disable-conversion-webhook
        {{- end }}
        env:
        - name: WATCH_NAMESPACE # Leave blank to watch all namespaces
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: terraform-operator
        {{- range $key, $value := .Values.controller.environment_vars }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{- end }}
        {{- with .Values.controller.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
        - name: https
          containerPort: 9443
          protocol: TCP
        volumeMounts:
        {{- if .Values.webhook.enabled }}
        - name: certs
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
        {{- end }}
      volumes:
      {{- if .Values.webhook.enabled }}
      - name: certs
        secret:
          secretName: {{ .Release.Name }}-selfsigned
          optional: true
      {{- end }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end -}}
